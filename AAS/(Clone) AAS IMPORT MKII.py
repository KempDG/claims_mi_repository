# Databricks notebook source
# MAGIC %md
# MAGIC ## 1. Import Libraries

# COMMAND ----------

#TEST UPDATE

import pyspark.sql.functions as f

# COMMAND ----------

# MAGIC %md
# MAGIC ## 2. Setup Credentials, Directories + Variables

# COMMAND ----------


# Credentials
User = "claims_mi_db"
Pwd = "U5!bu$168Tse"

# catalog
# database 
catRef = 'hive_metastore.'
dbRef = 'ice_aas.'

# set up lists
lstInTbl = [
"dbo.EXP_DIM_CHARGE_TYPE",
"dbo.EXP_DIM_CLAIM",
"dbo.EXP_DIM_CLAIM_PARTY",
"dbo.EXP_DIM_CLAIM_SECTION",
"dbo.EXP_DIM_CLAIM_STATUS",
"dbo.EXP_DIM_COMMENT",
"dbo.EXP_DIM_COMPLAINT",
"dbo.EXP_DIM_CONTACT_ATTEMPT",
"dbo.EXP_DIM_CONTACTPOINT_ADDRESS",
"dbo.EXP_DIM_CONTACTPOINT_EMAIL",
"dbo.EXP_DIM_CONTACTPOINT_TELEPHONE",
"dbo.EXP_DIM_DOCUMENT",
"dbo.EXP_DIM_DOCUMENT_TRANSPORT",
"dbo.EXP_DIM_ESTIMATE",
"dbo.EXP_DIM_ESTIMATE_REJECTION_REASON",
"dbo.EXP_DIM_ESTIMATE_STATUS",
"dbo.EXP_DIM_EXCESS_STATE",
"dbo.EXP_DIM_EXCESS_TYPE",
"dbo.EXP_DIM_EXPORT_REQUEST_STATUS",
"dbo.EXP_DIM_FINANCIAL_STATUS",
"dbo.EXP_DIM_HANDLER_TYPE",
"dbo.EXP_DIM_HEAD_OF_DAMAGE",
"dbo.EXP_DIM_HIRE_CATEGORY",
"dbo.EXP_DIM_INVOICE",
"dbo.EXP_DIM_INVOICE_CATEGORY",
"dbo.EXP_DIM_INVOICE_STATUS",
"dbo.EXP_DIM_JOB",
"dbo.EXP_DIM_JOB_COMPONENT",
"dbo.EXP_DIM_JOB_COMPONENT_STATUS",
"dbo.EXP_DIM_JOB_STATUS",
"dbo.EXP_DIM_LITIGATION",
"dbo.EXP_DIM_NEGOTIATION",
"dbo.EXP_DIM_NEGOTIATION_STATUS",
"dbo.EXP_DIM_OBJECT_CONTENTS_CONTAINER",
"dbo.EXP_DIM_OBJECT_INSURED_PERSON",
"dbo.EXP_DIM_OBJECT_VEHICLE",
"dbo.EXP_DIM_PAYMENT",
"dbo.EXP_DIM_POLICY",
"dbo.EXP_DIM_QUESTION",
"dbo.EXP_DIM_QUESTION_ANSWER",
"dbo.EXP_DIM_RECOVERY",
"dbo.EXP_DIM_RECOVERY_BATCH",
"dbo.EXP_DIM_RESERVE",
"dbo.EXP_DIM_RESERVE_CHANGE_REASON",
"dbo.EXP_DIM_SCHEME_SECTION",
"dbo.EXP_DIM_SERVICEPROVIDER",
"dbo.EXP_DIM_SIU_REFERRAL",
"dbo.EXP_DIM_TASK",
"dbo.EXP_DIM_TASK_STATUS",
"dbo.EXP_DIM_TASK_TRANSACTION_TYPE",
"dbo.EXP_DIM_USER",
"dbo.EXP_DIM_WORKGROUP",
"dbo.EXP_TRN_ANSWER",
"dbo.EXP_TRN_CLAIM",
"dbo.EXP_TRN_CLAIM_HANDLING",
"dbo.EXP_TRN_CLAIM_PARTY",
"dbo.EXP_TRN_CLAIM_SECTION",
"dbo.EXP_TRN_COMMENT",
"dbo.EXP_TRN_COMPLAINT",
"dbo.EXP_TRN_COMPLAINT_ITEM",
"dbo.EXP_TRN_CONTACT_ATTEMPT",
"dbo.EXP_TRN_CONTACTPOINT",
"dbo.EXP_TRN_DOCUMENT",
"dbo.EXP_TRN_DOCUMENT_TRANSPORT",
"dbo.EXP_TRN_ESTIMATE",
"dbo.EXP_TRN_EXCESS",
"dbo.EXP_TRN_EXCESS_CLAIM_SECTION",
"dbo.EXP_TRN_EXPORT_REQUEST",
"dbo.EXP_TRN_HIRE_VEHICLE",
"dbo.EXP_TRN_IMPORT_RESPONSE",
"dbo.EXP_TRN_INVOICE",
"dbo.EXP_TRN_JOB",
"dbo.EXP_TRN_JOB_COMPONENT",
"dbo.EXP_TRN_NEGOTIATION",
"dbo.EXP_TRN_NEGOTIATION_DEDUCTION",
"dbo.EXP_TRN_NEGOTIATION_LINE",
"dbo.EXP_TRN_NEGOTIATION_LINE_DEDUCTION",
"dbo.EXP_TRN_PARTY_PARTY",
"dbo.EXP_TRN_PARTY_VULNERABILITY",
"dbo.EXP_TRN_PAYMENT",
"dbo.EXP_TRN_QUESTION_RESPONSE",
"dbo.EXP_TRN_RECOVERY",
"dbo.EXP_TRN_RESERVE",
"dbo.EXP_TRN_SIU_REFERRAL_BREAKDOWN",
"dbo.EXP_TRN_TASK",
"dbo.EXP_TRN_VEHICLE_DAMAGE"
]

lstOutTbl = [
"ICE_DIM_CHARGE_TYPE",
"ICE_DIM_CLAIM",
"ICE_DIM_CLAIM_PARTY",
"ICE_DIM_CLAIM_SECTION",
"ICE_DIM_CLAIM_STATUS",
"ICE_DIM_COMMENT",
"ICE_DIM_COMPLAINT",
"ICE_DIM_CONTACT_ATTEMPT",
"ICE_DIM_CONTACTPOINT_ADDRESS",
"ICE_DIM_CONTACTPOINT_EMAIL",
"ICE_DIM_CONTACTPOINT_TELEPHONE",
"ICE_DIM_DOCUMENT",
"ICE_DIM_DOCUMENT_TRANSPORT",
"ICE_DIM_ESTIMATE",
"ICE_DIM_ESTIMATE_REJECTION_REASON",
"ICE_DIM_ESTIMATE_STATUS",
"ICE_DIM_EXCESS_STATE",
"ICE_DIM_EXCESS_TYPE",
"ICE_DIM_EXPORT_REQUEST_STATUS",
"ICE_DIM_FINANCIAL_STATUS",
"ICE_DIM_HANDLER_TYPE",
"ICE_DIM_HEAD_OF_DAMAGE",
"ICE_DIM_HIRE_CATEGORY",
"ICE_DIM_INVOICE",
"ICE_DIM_INVOICE_CATEGORY",
"ICE_DIM_INVOICE_STATUS",
"ICE_DIM_JOB",
"ICE_DIM_JOB_COMPONENT",
"ICE_DIM_JOB_COMPONENT_STATUS",
"ICE_DIM_JOB_STATUS",
"ICE_DIM_LITIGATION",
"ICE_DIM_NEGOTIATION",
"ICE_DIM_NEGOTIATION_STATUS",
"ICE_DIM_OBJECT_CONTENTS_CONTAINER",
"ICE_DIM_OBJECT_INSURED_PERSON",
"ICE_DIM_OBJECT_VEHICLE",
"ICE_DIM_PAYMENT",
"ICE_DIM_POLICY",
"ICE_DIM_QUESTION",
"ICE_DIM_QUESTION_ANSWER",
"ICE_DIM_RECOVERY",
"ICE_DIM_RECOVERY_BATCH",
"ICE_DIM_RESERVE",
"ICE_DIM_RESERVE_CHANGE_REASON",
"ICE_DIM_SCHEME_SECTION",
"ICE_DIM_SERVICEPROVIDER",
"ICE_DIM_SIU_REFERRAL",
"ICE_DIM_TASK",
"ICE_DIM_TASK_STATUS",
"ICE_DIM_TASK_TRANSACTION_TYPE",
"ICE_DIM_USER",
"ICE_DIM_WORKGROUP",
"ICE_TRN_ANSWER",
"ICE_TRN_CLAIM",
"ICE_TRN_CLAIM_HANDLING",
"ICE_TRN_CLAIM_PARTY",
"ICE_TRN_CLAIM_SECTION",
"ICE_TRN_COMMENT",
"ICE_TRN_COMPLAINT",
"ICE_TRN_COMPLAINT_ITEM",
"ICE_TRN_CONTACT_ATTEMPT",
"ICE_TRN_CONTACTPOINT",
"ICE_TRN_DOCUMENT",
"ICE_TRN_DOCUMENT_TRANSPORT",
"ICE_TRN_ESTIMATE",
"ICE_TRN_EXCESS",
"ICE_TRN_EXCESS_CLAIM_SECTION",
"ICE_TRN_EXPORT_REQUEST",
"ICE_TRN_HIRE_VEHICLE",
"ICE_TRN_IMPORT_RESPONSE",
"ICE_TRN_INVOICE",
"ICE_TRN_JOB",
"ICE_TRN_JOB_COMPONENT",
"ICE_TRN_NEGOTIATION",
"ICE_TRN_NEGOTIATION_DEDUCTION",
"ICE_TRN_NEGOTIATION_LINE",
"ICE_TRN_NEGOTIATION_LINE_DEDUCTION",
"ICE_TRN_PARTY_PARTY",
"ICE_TRN_PARTY_VULNERABILITY",
"ICE_TRN_PAYMENT",
"ICE_TRN_QUESTION_RESPONSE",
"ICE_TRN_RECOVERY",
"ICE_TRN_RESERVE",
"ICE_TRN_SIU_REFERRAL_BREAKDOWN",
"ICE_TRN_TASK",
"ICE_TRN_VEHICLE_DAMAGE"
]

# COMMAND ----------

# MAGIC %md
# MAGIC ## 3. Loop Tables

# COMMAND ----------


# Overwrite output tables with struct blank
# loop to do 

for inTbl, outTbl in zip(lstInTbl, lstOutTbl):

    df = (
        spark.read.format("sqlserver")
        .option("host", "10.200.13.45")
        .option("port", "1433")
        .option("instance", "SQLC01")
        .option("database", "ICE_AccidentAssist_Live")
        .option("dbtable", inTbl)
        .option("user", User)
        .option("password", Pwd)
        .option("trustServerCertificate", True)
        .load()
    )

    # get columns
    colTot = df.columns

    # loop columns to rename any containing a space
    for i in range(len(colTot)):
        df = df.withColumnRenamed(colTot[i], colTot[i].replace(' ','_'))

    # Always write latest results
    df.write\
    .format("delta")\
    .mode("overwrite")\
    .option("overwriteSchema", True)\
    .saveAsTable(catRef + dbRef + outTbl)

    # Optimise 
    spark.sql("OPTIMIZE " + catRef + dbRef + outTbl + ";")
