# Databricks notebook source
# MAGIC %md
# MAGIC ## ICE_AAS.TBL_AAS_FINANCIALS

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC DROP TABLE IF EXISTS ICE_AAS.TBL_AAS_FINANCIALS;
# MAGIC
# MAGIC CREATE TABLE ICE_AAS.TBL_AAS_FINANCIALS AS (
# MAGIC
# MAGIC Select distinct
# MAGIC CLAIM.CLAIM_ID,
# MAGIC CLAIM.CLAIM_NUMBER,
# MAGIC Claim.Notification_date,
# MAGIC TC.position_code,
# MAGIC TC.Status_code,
# MAGIC SUBROGATED,
# MAGIC CLAIM.liability_decision,
# MAGIC CASE 
# MAGIC 			WHEN CLAIM.CLAIM_NUMBER in ('AAS029001','AAS075376') THEN 'AAUICL' 
# MAGIC 			WHEN CLAIM.CLAIM_NUMBER like 'AAS%' and DCP.Organisation_name in ('AA Underwriting','AA Underwriting NM','AA Underwriting Smart','AA Silver','AA Gold','AA Platinum') THEN 'AAUICL'
# MAGIC 	        WHEN CLAIM.CLAIM_NUMBER like 'AAS%' and DCP.Organisation_name is not null then 'Panel' 
# MAGIC 			ELSE 'Member'
# MAGIC END AS Workstream,
# MAGIC TJOB.JOB_ID,
# MAGIC TP_INSURER,
# MAGIC ifnull(PRREPAIR,0) AS PRREPAIR ,
# MAGIC ifnull(PRHIRE,0) AS PRHIRE,
# MAGIC ifnull(PRTOW,0) AS PRTOW,
# MAGIC ifnull(PRSTORAGE,0) AS PRSTORAGE,
# MAGIC ifnull(RRREPAIR,0) AS RRREPAIR ,
# MAGIC ifnull(RRHIRE,0) AS RRHIRE,
# MAGIC ifnull(RRTOW,0) AS RRTOW,
# MAGIC ifnull(RRSTORAGE,0) AS RRSTORAGE,
# MAGIC ifnull(PPREPAIR,0) AS PPREPAIR,
# MAGIC ifnull(PPHIRE,0) AS PPHIRE,
# MAGIC ifnull(PPTOW,0) AS PPTOW ,
# MAGIC ifnull(PPSTORAGE,0) AS PPSTORAGE,
# MAGIC ifnull(RPALL,0) AS RPALL,
# MAGIC ifnull(RPREPAIR,0) AS RPREPAIR,
# MAGIC ifnull(RPHIRE,0) AS RPHIRE,
# MAGIC ifnull(RPTOW,0) AS RPTOW,
# MAGIC ifnull(RPSTORAGE,0) AS RPSTORAGE,
# MAGIC CASE WHEN REPAIRSALESINVOICERAISEDOUTLAY.CLAIM_ID is not null then 'Invoice'
# MAGIC      WHEN OUTLAY.CLAIM_ID is not null then 'Negotiation'
# MAGIC 	 ELSE null end as OutlayChannel,
# MAGIC ifnull(REPAIRSALESINVOICERAISEDOUTLAY.TotalInvoiceRaisedAmount,OUTLAY.DEMAND_AMT) AS OutlayRequestedAmount,
# MAGIC ifnull(REPAIRSALESINVOICERAISEDOUTLAY.LastInvoiceRaisedDate,OUTLAY.TRANSACTION_DATE) AS OutlayRequestedDate,
# MAGIC CASE 
# MAGIC WHEN PRREPAIR > 0  and OUTLAY.TRANSACTION_DATE is null then 'Reserved'
# MAGIC WHEN PPREPAIR in  ('18.00','24.00','48.00','72.00') then 'TL Fee Paid' 
# MAGIC      WHEN PRRepair = 0 AND RRRepair = 0 AND RPREPAIR > 0 then 'Recovered' 
# MAGIC      WHEN PPRepair > 0 and RRRepair > 0  and OUTLAY.TRANSACTION_DATE is null then 'Outlay Not Requested'
# MAGIC      WHEN RRRepair > 0 and datediff(d,OUTLAY.TRANSACTION_DATE,getdate()) between 1 and 30 then '0-30 Days' 
# MAGIC      WHEN RRRepair > 0 and datediff(d,OUTLAY.TRANSACTION_DATE,getdate()) between 31 and 60 then '31-60 Days' 
# MAGIC      WHEN RRRepair > 0 and datediff(d,OUTLAY.TRANSACTION_DATE,getdate()) between 61 and 90 then '61-90 Days'
# MAGIC 	 WHEN RRRepair > 0 and datediff(d,OUTLAY.TRANSACTION_DATE,getdate()) between 91 and 120 then '91-120 Days'
# MAGIC      WHEN RRRepair > 0 and datediff(d,OUTLAY.TRANSACTION_DATE,getdate()) between 121 and 1095 then '121-3 years'
# MAGIC      WHEN RRRepair > 0 and datediff(d,OUTLAY.TRANSACTION_DATE,getdate()) > 1095 then '3 years +'  
# MAGIC      WHEN RRRepair = 0 AND PPRepair = 0 AND RPRepair = 0 then 'Zero Claim'
# MAGIC      ELSE NULL 
# MAGIC END AS RecoveryStatus,
# MAGIC RecoveredDate
# MAGIC
# MAGIC FROM hive_metastore.ice_aas.ice_dim_claim CLAIM
# MAGIC
# MAGIC LEFT JOIN hive_metastore.ice_aas.ice_trn_claim TC ON TC.CLAIM_ID = CLAIM.CLAIM_ID AND TC.CURRENT_FLAG = 'Y'
# MAGIC
# MAGIC INNER JOIN hive_metastore.ice_aas.ice_trn_job TJOB ON CLAIM.CLAIM_ID = TJOB.CLAIM_ID AND TJOB.CURRENT_FLAG = 'Y'
# MAGIC INNER JOIN hive_metastore.ice_aas.ice_dim_job DJOB ON DJOB.JOB_ID = TJOB.JOB_ID AND DJOB.CURRENT_FLAG = 'Y' AND DJOB.Party_type = 'First Party' and Job_type = 'MOTOR'
# MAGIC
# MAGIC LEFT JOIN hive_metastore.ice_aas.ice_trn_claim_party TCP ON CLAIM.CLAIM_ID = TCP.CLAIM_ID AND TCP.CURRENT_FLAG = 'Y' AND TCP.NATURE = 'INSURER'
# MAGIC LEFT JOIN hive_metastore.ice_aas.ice_dim_claim_party DCP ON TCP.CLAIM_PARTY_ID = DCP.PARTY_ID AND DCP.CURRENT_FLAG = 'Y'
# MAGIC
# MAGIC --Bring In Both Payment and Recovery Reserves
# MAGIC
# MAGIC LEFT JOIN 
# MAGIC (
# MAGIC SELECT 
# MAGIC
# MAGIC CLAIM_ID,
# MAGIC JOB_ID,
# MAGIC SUM(CASE WHEN RES.HOD_ID = 11 THEN RESERVE_AMOUNT ELSE 0 END) AS PRREPAIR,
# MAGIC SUM(CASE WHEN RES.HOD_ID = 9 THEN RESERVE_AMOUNT ELSE 0 END) AS PRHIRE,
# MAGIC SUM(CASE WHEN RES.HOD_ID = 10 THEN RESERVE_AMOUNT ELSE 0 END) AS PRTOW,
# MAGIC SUM(CASE WHEN RES.HOD_ID = 13 THEN RESERVE_AMOUNT ELSE 0 END) AS PRSTORAGE,
# MAGIC
# MAGIC SUM(CASE WHEN RES.HOD_ID = 11 THEN RESERVE_RECOVERY_AMOUNT ELSE 0 END) AS RRREPAIR,
# MAGIC SUM(CASE WHEN RES.HOD_ID = 9 THEN RESERVE_RECOVERY_AMOUNT  ELSE 0 END) AS RRHIRE,
# MAGIC SUM(CASE WHEN RES.HOD_ID = 10 THEN RESERVE_RECOVERY_AMOUNT  ELSE 0 END) AS RRTOW,
# MAGIC SUM(CASE WHEN RES.HOD_ID = 13 THEN RESERVE_RECOVERY_AMOUNT  ELSE 0 END) AS RRSTORAGE
# MAGIC
# MAGIC FROM hive_metastore.ice_aas.ice_trn_reserve RES
# MAGIC
# MAGIC   LEFT JOIN hive_metastore.ice_aas.ice_dim_head_of_damage HOD ON RES.HEAD_OF_DAMAGE_KEY = HOD.HEAD_OF_DAMAGE_KEY
# MAGIC
# MAGIC   WHERE RES.CURRENT_FLAG = 'Y'
# MAGIC
# MAGIC GROUP BY CLAIM_ID,JOB_ID
# MAGIC
# MAGIC ) Reserves ON CLAIM.CLAIM_ID = Reserves.CLAIM_ID  AND TJOB.JOB_ID = Reserves.JOB_ID
# MAGIC
# MAGIC --Bring In Payments
# MAGIC
# MAGIC LEFT JOIN 
# MAGIC (
# MAGIC SELECT 
# MAGIC
# MAGIC CLAIM_ID,
# MAGIC JOB_ID,
# MAGIC SUM(CASE WHEN PAY.HOD_ID = 11 THEN ALLOCATION_AMOUNT ELSE 0 END) AS PPREPAIR,
# MAGIC SUM(CASE WHEN PAY.HOD_ID = 9 THEN ALLOCATION_AMOUNT ELSE 0 END) AS PPHIRE,
# MAGIC SUM(CASE WHEN PAY.HOD_ID = 10 THEN ALLOCATION_AMOUNT ELSE 0 END) AS PPTOW,
# MAGIC SUM(CASE WHEN PAY.HOD_ID = 13 THEN ALLOCATION_AMOUNT ELSE 0 END) AS PPSTORAGE
# MAGIC
# MAGIC
# MAGIC FROM hive_metastore.ice_aas.ice_trn_payment PAY
# MAGIC
# MAGIC   LEFT JOIN hive_metastore.ice_aas.ice_dim_head_of_damage HOD ON PAY.HEAD_OF_DAMAGE_KEY = HOD.HEAD_OF_DAMAGE_KEY
# MAGIC
# MAGIC   WHERE PAY.CURRENT_FLAG = 'Y'  AND CANCELLED_YYYYMM IS NULL AND STOPPED_YYYYMM is null and REJECTED_YYYYMM is null 
# MAGIC
# MAGIC GROUP BY CLAIM_ID,JOB_ID
# MAGIC
# MAGIC ) Payments ON CLAIM.CLAIM_ID = Payments.CLAIM_ID  AND TJOB.JOB_ID = Payments.JOB_ID
# MAGIC
# MAGIC --Bring In Recovery payments
# MAGIC LEFT JOIN 
# MAGIC (
# MAGIC SELECT 
# MAGIC
# MAGIC CLAIM_ID,
# MAGIC JOB_ID,
# MAGIC SUM(ALLOCATION_AMT) AS RPALL,
# MAGIC SUM(CASE WHEN REC.HOD_ID = 11 THEN ALLOCATION_AMT ELSE 0 END) AS RPREPAIR,
# MAGIC SUM(CASE WHEN REC.HOD_ID = 9 THEN ALLOCATION_AMT ELSE 0 END) AS RPHIRE,
# MAGIC SUM(CASE WHEN REC.HOD_ID = 10 THEN ALLOCATION_AMT ELSE 0 END) AS RPTOW,
# MAGIC SUM(CASE WHEN REC.HOD_ID = 13 THEN ALLOCATION_AMT ELSE 0 END) AS RPSTORAGE,
# MAGIC max(BANKED_DATE) as RecoveredDate
# MAGIC
# MAGIC FROM hive_metastore.ice_aas.ice_trn_recovery REC
# MAGIC
# MAGIC LEFT JOIN hive_metastore.ice_aas.ice_dim_head_of_damage HOD ON REC.HEAD_OF_DAMAGE_KEY = HOD.HEAD_OF_DAMAGE_KEY
# MAGIC
# MAGIC WHERE REC.CURRENT_FLAG = 'Y' AND FINANCIAL_STATUS_KEY = 12  and include_in_total = 1
# MAGIC
# MAGIC GROUP BY CLAIM_ID,JOB_ID
# MAGIC
# MAGIC ) Recoveries ON CLAIM.CLAIM_ID = Recoveries.CLAIM_ID  AND TJOB.JOB_ID = Recoveries.JOB_ID
# MAGIC
# MAGIC
# MAGIC LEFT JOIN 
# MAGIC (
# MAGIC select
# MAGIC CLAIM_ID,
# MAGIC SUM(DEMAND_AMT) AS DEMAND_AMT,
# MAGIC MAX(TNEG.TRANSACTION_DATE) AS Transaction_Date
# MAGIC
# MAGIC FROM hive_metastore.ice_aas.ice_trn_negotiation TNEG
# MAGIC LEFT JOIN hive_metastore.ice_aas.ice_dim_negotiation DNEG ON TNEG.NEGOTIATION_KEY = DNEG.NEGOTIATION_KEY 
# MAGIC WHERE DNEG.NEGOTIATION_TYPE_CODE = 'Recovery' AND TNEG.CURRENT_FLAG = 'Y'  AND STATUS <> 'REJECTED'
# MAGIC GROUP BY 
# MAGIC CLAIM_ID
# MAGIC ) OUTLAY ON CLAIM.CLAIM_ID = OUTLAY.CLAIM_ID 
# MAGIC
# MAGIC
# MAGIC
# MAGIC LEFT JOIN 
# MAGIC (
# MAGIC select 
# MAGIC claim_id,
# MAGIC COUNT(distinct(claim_id)) AS SalesInvoicesRaised,
# MAGIC SUM(RecoveryDemanded) AS TotalInvoiceRaisedAmount,
# MAGIC MAX(RecoveryRequestedDate) AS LastInvoiceRaisedDate
# MAGIC
# MAGIC from
# MAGIC hive_metastore.ice_aas.tbl_aas_recovery_basic
# MAGIC WHERE 
# MAGIC (workstream <> 'Member' and invoice_category_description = 'Outlay'  AND OutlayRequestedMethod = 'Invoice') or  
# MAGIC (workstream = 'Member' and invoice_category_description = 'Recovery'  AND OutlayRequestedMethod = 'Invoice')
# MAGIC GROUP BY CLAIM_ID
# MAGIC ) REPAIRSALESINVOICERAISEDOUTLAY ON CLAIM.CLAIM_ID = RepairSALESINVOICERAISEDOutlay.CLAIM_ID
# MAGIC
# MAGIC WHERE CLAIM.CURRENT_FLAG = 'Y'  
# MAGIC )
